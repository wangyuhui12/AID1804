
常用的字符串方法：
    见：str.html
    字符串方法的调用语法
        对象.方法名（方法传参）
        注：
        　方法的调用属于表达式，通常可以返回一个值或None

示例：
    'abc'.isalpha()   # 正确
    123.isalpha

方法：
    s.isdigit()                  判断s是否全为数字
    s.isalpha()                  判断s是否全为字母
    s.islower()                  判断s是否全为小写字母
    s.isupper()                  判断s是否全为大写字母
    s.isspace()                  判断s是否全为空白字符
    s.center(width[.fill])       将字符串居中，左右默认填充空格。fill可选填充参数
    s.count(sub[,start[,end]])   获取一个字符串中子串的个数
    s.find(sub[,start[,end]])    获取字符串中子串sub的索引，失败返回-1
    s.strip()                   　返回去掉左右空白字符的字符串
    s.lstrip()                   返回去掉左侧空白字符的字符串
    s.rstrip()                   返回去掉右侧空白字符的字符串
    s.upper()                   　生成将英文转换为大写的字符串
    s.lower()                    生成将英文转换为小写的字符串 
    s.replace(old, new[,count])  将原字符串old用new代替，生成一个新的字符串

    s.startswith(prefix[,start[,end]])
        返回s是否是以prefix开头，如果以prefix开头,返回True,否则返回False
    s.endswith(suffix[,start[,end]])
        返回s是否是以suffix开头，如果以suffix开头,返回True,否则返回False

str1 = "    My name is Mr Green"
str2 = "HELLO"

"My name is Mr Green"
"Mr Green"
   My name Is Mr Green
"       HELLO"
"hello"
输出str1和str2中长度最长的字符串的长度


练习：
　输入一个字符串
    １、判断您输入的字符串有几个空格
    ２、将原字符串的左右空白字符去掉，打印出有效字符的长度
    ３、判断您输入是否是数字

字符串的格式化表达式
　作用：
    生成一定格式的字符串
　运算符：
    %
 语法格式：
    格式字符串　% 参数值
    格式字符串　% （参数值１，参数值２，...）
　说明：
    格式化字符串中以%开头的为占位符，占位符的位置将用参数替换
    % 右侧为参数值，当有多个参数值时用括号()括起来，之间用逗号(,)分隔
　示例：
    fmt = "姓名: %s, 年龄: %d"
    name = 'tarena'
    age = 15
    print(fmt % (name, age))

格式化字符串中的占位符和类型码
    
    %s          字符串
    %r          字符串，使用repr而不是str
    %c          整数转为单个字符
    %d          十进制整数
    %o          八进制整数
    %x          十六进制整数(字符a-f小写)
    %X          十六进制整数(字符A-F大写)
    %e          指数型浮点数(e小写),如2.9e+10
    %f,%F       浮点十进制形式
　　　　%g,%G       十进制形式浮点或指数浮点自动转换
　　　　%%          等同于%字符

占位符和类型码之间的格式语法
    % [格式语法]　类型码
    　　格式语法：
        - 左对齐
        + 显示正号
        0　补零
        宽度（整数）
        宽度.精度（整数）
示例：
    '%10d'  % 123    #'         123'
    '%-10d' % 123    #'123         '
    '%10s'  % 'abc' #'         abc'
    '%-10'  % 'abc' #'abc         '
    '%07.3f' % 3.1415926 # '003.141'

练习：
１、输入三行文字，让这些文字依次以20字符的宽度右对齐
输出：
    如：
    请输入第一行：hello world
    请输入第２行：abcd
    请输入第３行：a
    输出结果：
            hello world
                   abcd
                      a
 做完上面的题后再思考：
    能否以最长字符串的长度进行右对齐显示（左侧填充空格）

循坏语句
 while语句
 for 语句
问题：
    输入一个数n绑定，打印出n行的"hello world!"
print("hello world!")

n = 1
while True:
    print("hello world!")
    n += 1
    if n > 5:
        break

for i in range(5):
    print("hello world!")

while语句：
 作用：
    根据一定条件，重复的执行一条语句或多条语句
 语法：
    while 真值表达式：
        语句块
    else:
        语句块

练习：
 编写程序，用while语句解决下面的问题
 问题：
    输入一个数用n绑定，打印出n行的"hello world!"


练习：
 1、输入一个整数，用end变量绑定，打印出1~end的所有整数，（包含end）
 2、写程序，输入两个整数，第一个用begin绑定，第二个用end变量绑定，打印出begin~end的所有的整数

while语句语法说明：
    1、先执行真值表达式，判断True/False
    2、如果为True则执行语句块1，然后跳转到第一步
    3、如果为False则执行else子句部分的语句块2，然后结束次while语句的执行，如果没有else子句，则直接结束此while语句
    4、else子句部分可以省略（同if语句类似）

while 注意事项：
    1、要控制真值表达式来访问死循环
    2、通常用真值表达式内的变量来控制循环条件
    3、通常要在循环语句块内改变循环变量来控制循环的次数和变量的走向。

练习：
    1、打印1~20的整数，打印在一行内显示，每个数字之间用一个空格分隔开
    如：
        1 2 3 4 ... 18 19 20

    2、打印1~20的整数，每行5个，打印四行，如：
        1 2 3 4 5
        6 7 8 9 10
        .....
        注意：while语句内可以嵌套if语句

    3、用while语句打印10~1的所有整数（包含1）

练习：
    写程序，用while虚幻来计算
    1、1+2+3+...+100和
    2、用while语句实现打印三角形，表示三角形的宽度和高度，打印出相应的直角三角形
    如：
        请输入三角形宽度： 4
        打印如下：
            *
            * *
            * * * 

whlie 语句嵌套
 while 语句本身是语句，和其它语句一样，可以放在其它复合语句的内部
while嵌套示意：
 while 真值表达式：
    ...
    while 真值表达式2:
        ...
    else:
        ..
    ...
 else:
    ...

问题：
    打印1~20之间的整数，打印在一行

练习：
    输入一个数，打印指定宽度的正方形
    如：
        请输入：5
    打印如下正方形：
        1 2 3 4 5
        1 2 3 4 5
        1 2 3 4 5
        1 2 3 4 5
        1 2 3 4 5


break 语句
 作用：
    用于循环语句(while,for语句)中，用来终止当前循环语句的执行

break说明
 1、当break语句执行后，此循环语句break之后的语句将不再执行
 2、break语句通常和if语句组合使用
 3、break语句终止循环时，循环语句的else子句的语句将不会执行
 4、break语句只能终止当前循环语句的执行，如果有循环嵌套时，不会跳出嵌套的外重循环
 5、break语句只能在循环语句(while或for语句)内部使用

示例见：04_break.py

死循环：
    死循环是指循环条件一直成立的循环
    死循环通常用break语句来终止循环
    死循环的else语句永远不会执行

示例：
while True:
    n = int(input("请输入"))
    if n == 0:
        break
    print(n)

print()

练习：
 1、任意输入一些整数，
    每次输入一个，当输入负数时结束输入，当输入完成后，打印您输入的这些数的和
 2、写程序用while实现打印三角形。
    要求输入一个整数表示三角形的宽度和高度，打印出如下的三种三角形
    1）
       *
      **
     ***
    ****
    2)
    ****
     ***
      **
       *
    3)
    ****
    ***
    **
    *
 3、写程序求多项式的和：
 1/1 - 1/3 + 1/5 - 1/7 + 1/9 + ... + 1/(2*n-1)
 n最大取：1000000
  1)打印这个和
  2）打印这个和乘以4的值？